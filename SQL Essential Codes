#calculated field
select city, gender, height, weight, height/weight
from patients;

#naming calculated field
#method 1
select city, gender, height, weight, height/weight 'portion'
from patients;

#method 2 = add as
select city, gender, height, weight, height/weight as 'portion method 2'
from patients;

#Add select only some row with conditions = WHERE
#this is the same as filter in excel
#filter numerical value
select *
from patients
where height >= 150;

#filter string value
select *
from patients
where gender = 'M'
order by height desc, weight desc;

#Filter 2 conditions = WHERE + AND ***********
select *
from patients
where gender = 'F' AND height > 170
order by height desc, weight desc;

#FILTER one of the 2 conditions = WHERE + OR ****
SELECT *
FROM patients
WHERE gender = 'F' OR height > 170
ORDER BY weight DESC;

#Filter with datetime column******
#datetime format in SQL = YY-MM-DD ******
select *
from patients
where gender = 'M' AND birth_date > '2000-01-01'
order by height desc, weight desc;

#Extract only year portion of datetime using year() function******
#If type only year, it is number not string like full datetime
select *
from patients
where gender = 'M' AND year(birth_date) = 2000
order by height desc, weight desc; 

#If type only month, it is number not string like full datetime
select *
from patients
where gender = 'M' AND month(birth_date) = 12
order by height desc, weight desc; 

#If type only day, it is number not string like full datetime
select *
from patients
where gender = 'M' AND day(birth_date) = 31
order by height desc, weight desc; 

#Filter both Month and Date at once
#Example 1
select *
from patients
where month(birth_date) = 5 AND day(birth_date) = 31
order by height desc;

#Example 2
select *
from patients
where month(birth_date) between 5 AND 8 AND day(birth_date) = 30
order by height desc; 

#Filter with rows in between 2 values (> a but < b)
#Method 1 = where + and
select *
from patients
where height >= 170 AND height < 200
order by height desc, weight desc;

#Method 2 = where + between + and
select *
from patients
where height BETWEEN 170 AND 200
order by height desc, weight desc;

#Filter with 3 conditions
select *
from patients
where gender = 'M' AND height > 170 AND height < 200
order by height desc, weight desc; 

#Filter with 3 conditions with BETWEEN
select *
from patients
where gender = 'M' AND height BETWEEN 170 AND 200
order by height desc, weight desc; 

#Filter with OR conditions
SELECT * 
FROM patients
WHERE gender = 'M' or weight >= 70
order by weight desc

#Filter with many conditions from single column = using WHERE + IN()
#suitable for scenario with many conditions to write to save time*******
SELECT *
FROM patients
WHERE city IN ('Hamilton', 'Athens', 'Dundas')
ORDER BY weight DESC;

#Filter between specific number and Max value 
#have to SELECT MAX(height) FROM patients in () because the result of that is a single number
SELECT *
FROM patients
WHERE height BETWEEN 200 AND (SELECT MAX(height) FROM patients)
ORDER BY height DESC;

#Filter between specific number and Min value 
SELECT *
FROM patients
WHERE height BETWEEN (SELECT MIN(height) FROM patients) AND 130
ORDER BY height DESC;

#Other function that can be used apart from MAX() and MIN() are 
#COUNT() AVG() SUM()

#Create new column from combining text of existing columns = CONCAT()
#Exmaple 1
SELECT first_name, last_name, concat(first_name, last_name) AS 'full_name'
FROM patients;

#Example 2
SELECT first_name, last_name, concat(first_name," ",last_name) AS full_name
FROM patients;

#Sorting = ORDER BY
#Ascending = min >> max
select *
from patients
where height > 160
order by height;

#Descening = max >> min
select *
from patients
where height > 160
order by height desc;

#ORDER BY 2 columns
#1 column ascending, 1 column descending
select *
from patients
where height > 170
order by height, weight desc;

#BOTH columns descending
select *
from patients
where height > 180
order by height desc, weight desc;

#Extract weekday(monday - Friday) out of datetime column using weekday() ***This code is error as there is no WEEKDAY() function
#0 = monday, 6 = sunday
SELECT 
    birth_date, 
    gender, 
    height, 
    weight, 
    WEEKDAY(birth_date) AS Day_in_week
FROM 
    patients
WHERE 
    WEEKDAY(birth_date) = 0
ORDER BY 
    height DESC, 
    weight DESC;

#Filter only when start with specific letter = using WHERE + LIKE + a%
SELECT *
FROM patients
WHERE first_name LIKE 'J%'
ORDER BY first_name DESC;

#Filter only when contain specific letter = using WHERE + LIKE + %a%
SELECT *
FROM patients
WHERE first_name LIKE '%in%'
ORDER BY first_name DESC;

#Filter only NULL value = IS + NULL
SELECT *
FROM patients
WHERE allergies IS NULL;

#Do slicer like in excel in SQL = HAVING
#Example 1: have only 1 slicer
SELECT city, AVG(height) AS average_height, AVG(weight) AS average_weight
FROM patients
WHERE height > 150
GROUP BY city
HAVING average_height > 180;

#Example 2: have 2 slicers
SELECT city, AVG(height) AS average_height, AVG(weight) AS average_weight
FROM patients
WHERE height > 150
GROUP BY city
HAVING average_height > 180 AND average_weight > 90;

#Example 3: have 1 slicer as datetime
#Method 1
SELECT city, gender, birth_date, AVG(height) AS average_height, AVG(weight) AS average_weight
FROM patients
WHERE height > 150
GROUP BY city
HAVING birth_date > '2000-01-01';

#Method 2
SELECT city, gender, birth_date, AVG(height) AS average_height, AVG(weight) AS average_weight
FROM patients
WHERE height > 150
GROUP BY city
HAVING YEAR(birth_date) > 2000;

#Example 4: have 2 slicers as datetime, 1st slicer = year 2nd slicer = month
SELECT city, gender, birth_date, AVG(height) AS average_height, AVG(weight) AS average_weight
FROM patients
WHERE height > 150
GROUP BY city
HAVING YEAR(birth_date) > 2000 AND month(birth_date) > 6;

#Example 5: have 2 slicers as datetime, 1st slicer = year 2nd slicer = month using BETWEEN
SELECT city, gender, birth_date, AVG(height) AS average_height, AVG(weight) AS average_weight
FROM patients
WHERE height > 150
GROUP BY city
HAVINg YEAR(birth_date) > 2000 AND month(birth_date) between 5 AND 12;
#*******BETWEEN will include the number specified as well ex. BETWEEN 5 AND 12 means 5, 6, 7, 8, 9, 10, 11, 12

#IF condition = CASE + WHEN + THEN + ELSE + END + AS
#********CASE WHEN needs to be after SELECT and before FROM only!!
#****Can only use CASE on the columns that we select
#Method 1
SELECT 
    height, 
    weight,
    CASE 
        WHEN weight < 60 THEN 'slim' 
        WHEN weight < 70 THEN 'medium' 
        WHEN weight < 100 THEN 'fat' 
        ELSE 'diabete' 
    END AS body_type
FROM patients;

#Method 2
SELECT
    height, 
    weight,
    CASE 
        WHEN weight < 60 THEN 'slim'
        WHEN weight BETWEEN 60 AND 70 THEN 'medium'
        WHEN weight BETWEEN 70 AND 100 THEN 'fat'
        ELSE 'diabete'
    END AS body_type
FROM patients;

#****Always need to put , before CASE
SELECT *,
    CASE 
        WHEN weight < 60 THEN 'slim' 
        WHEN weight < 70 THEN 'medium' 
        WHEN weight < 100 THEN 'fat' 
        ELSE 'diabete' 
    END AS body_type
FROM patients;

#Create 2 CASE WHEN at once = want to create 2 new condition columns based on different criteria
SELECT first_name, last_name, salary,
    CASE 
        WHEN salary < 50000 THEN salary*(1.05) 
        WHEN salary > 50000 THEN salary*(1.07) 
    END AS New_salary,
    CASE
        WHEN dept_id = 6 THEN salary*(0.1)
    END AS Bonus
FROM employee_salary;

#Extract distinct value from a column = DISTINCT
#******Use a lot when need to create a sub-table to xlookup
SELECT DISTINCT city
FROM patients;

